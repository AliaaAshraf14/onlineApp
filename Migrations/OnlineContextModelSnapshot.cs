// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineFood_Project.Models;

#nullable disable

namespace OnlineFood_Project.Migrations
{
    [DbContext(typeof(OnlineContext))]
    partial class OnlineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.1.24081.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineFood_Project.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("OnlineFood_Project.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("ClientId");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("OnlineFood_Project.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .IsUnique();

                    b.ToTable("menus");
                });

            modelBuilder.Entity("OnlineFood_Project.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("Client_id")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.HasIndex("Client_id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("OnlineFood_Project.Models.OrderDetaile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("menuId")
                        .HasColumnType("int");

                    b.Property<int>("menu_Id")
                        .HasColumnType("int");

                    b.Property<int>("order_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("menuId");

                    b.ToTable("orderDetailes");
                });

            modelBuilder.Entity("OnlineFood_Project.Models.Menu", b =>
                {
                    b.HasOne("OnlineFood_Project.Models.Category", "Category")
                        .WithOne("Menu")
                        .HasForeignKey("OnlineFood_Project.Models.Menu", "CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OnlineFood_Project.Models.Order", b =>
                {
                    b.HasOne("OnlineFood_Project.Models.Client", "Client")
                        .WithMany("orders")
                        .HasForeignKey("Client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("OnlineFood_Project.Models.OrderDetaile", b =>
                {
                    b.HasOne("OnlineFood_Project.Models.Order", "order")
                        .WithMany("OrderDetailes")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineFood_Project.Models.Menu", "menu")
                        .WithMany("OrderDetailes")
                        .HasForeignKey("menuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("menu");

                    b.Navigation("order");
                });

            modelBuilder.Entity("OnlineFood_Project.Models.Category", b =>
                {
                    b.Navigation("Menu")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineFood_Project.Models.Client", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("OnlineFood_Project.Models.Menu", b =>
                {
                    b.Navigation("OrderDetailes");
                });

            modelBuilder.Entity("OnlineFood_Project.Models.Order", b =>
                {
                    b.Navigation("OrderDetailes");
                });
#pragma warning restore 612, 618
        }
    }
}
